CONF_SEC_RAY = "ray"
CONF_RAY_ENABLE = "ray.enable"
CONF_RAY_SEARCH_TYPE = "ray.search_type"
CONF_RAY_NBR_CPU = "ray.nbr_cpu"
CONF_RAY_NBR_GPU = "ray.nbr_gpu"
CONF_RAY_NBR_SAMPLES = "ray.nbr_samples"

CONF_SEC_ENV = "env"
CONF_ENV_PATH = "env.config.path"


CONF_SEC_MLFLOW = "mlflow"
CONF_MLFLOW_ENABLE = "mlflow.enable"
CONF_MLFLOW_EXPERIMENT_NAME = "mlflow.experiment_name"
CONF_MLFLOW_EXPERIMENT_NAME_GENERATE = "mlflow.experiment_name.generate"

CONF_SEC_EXPERIMENT = "experiment"
CONF_EXPERIMENT_PATH_TO_ROOT = "experiment.path_to_root"
CONF_EXPERIMENT_NBR_PROCESSES = "experiment.nbr_processes"
CONF_EXPERIMENT_NBR_TRAILS = "experiment.nbr_trials"
CONF_EXPERIMENT_CURRENT_TRAIL_NUMBER = "experiment.current_trial_number"
CONF_EXPERIMENT_CONFIGURATION_FILE = "experiment.configuration_file"

CONF_EXPERIMENT_UNIQUE_PROCESSING_ID = "experiment.unique_processing_id"
CONF_EXPERIMENT_VERIFY_ON_EVAL = "experiment.verify.on.eval"
CONF_EXPERIMENT_VERIFY_ON_EVAL_DS = "experiment.verify.on.eval.ds"
CONF_EXPERIMENT_VERIFY_ON_ALIGNMENT = "experiment.verify.on.alignment"

CONF_EXPERIMENT_IGNORE_VALUATION = "experiment.ignore.valuation"

CONF_SEC_LEARNER = "learner"
CONF_LEARNER_NAME = "learner.name"

CONF_SEC_EMBEDDING = "embedding"
CONF_EMBEDDING_LANG = "embedding.lang"
CONF_EMBEDDING_NAME = "embedding.name"
CONF_EMBEDDING_TRANSFORMER_MODEL = "embedding.transformer_model"
CONF_EMBEDDING_SENTENCE_TRANSFORMER_MODEL = "embedding.sentence_transformer_model"

CONF_SEC_GRAPH = "graph"
CONF_GRAPH_BUILDER_NAME = "graph.builder.name"
CONF_GRAPH_BUILDER_PROCESSOR = "graph.builder.processor"
CONF_GRAPH_BUILDER_BIDIRECTED = "graph.builder.bidirected"
CONF_GRAPH_BUILDER_SELFLOOP = "graph.builder.selfloop"
CONF_GRAPH_BUILDER_MULTIGRAPH = "graph.builder.multigraph"
CONF_GRAPH_BUILDER_NORMALIZE_FEATURES ="graph.builder.normalize.features"
CONF_GRAPH_BUILDER_RELATION_FROM_LM  = "graph.builder.relation.from.lm"
CONF_GRAPH_BUILDER_RELATION_TO_NODE = "graph.builder.relation.to.node"
CONF_GRAPH_ONLY_ARM = "graph.builder.only.arm"

CONF_SEC_DATASET = "dataset"
CONF_DATASET_NAME = "dataset.name"
CONF_DATASET_PROCESS_ID = "dataset.process.id"
CONF_DATASET_BATCH_SIZE = "dataset.batch.size"
CONF_DATASET_LIMIT = "dataset.limit"
CONF_DATASET_ID_FROM = "dataset.id.from"
CONF_DATASET_ID_TO = "dataset.id.to"
CONF_DATASET_REGENERATE_GRAPH = "dataset.regenerate.graph"
CONF_DATASET_USE_CACHE = "dataset.use.cache"
CONF_DATASET_PATH_TO_ROOT = "dataset.path_to_root"
CONF_DATASET_PROCESS_PARALLEL = "dataset.process_parallel"
CONF_DATASET_NBR_PROCESSES = "dataset.nbr_processes"
CONF_DATASET_INIT_SINGLE_DATASET = "data.holder_initialize_single_dataset"
CONF_DATASET_IN_MEMORY_ONLY = "dataset.in_memory_only"
CONF_DATASET_BINARIZE = "dataset.binarize"

CONF_SEC_OPTIMIZER = "optimizer"
CONF_OPTIMIZER_NAME = "optimizer.name"
CONF_OPTIMIZER_LEARNING_RATE = "optimizer.learning_rate"
CONF_OPTIMIZER_LEARNING_RATE_PATIENCE = "optimizer.learning_rate.patience"
CONF_OPTIMIZER_WEIGHT_DECAY = "optimizer.weight_decay"
CONF_OPTIMIZER_LEARNING_WARMUP_STEPS = "optimizer.warmup_steps"
CONF_OPTIMIZER_LEARNING_WARMUP_INIT_LR = "optimizer.warmup_init_lr"
CONF_SCHEDULER_NAME = "scheduler.name"



CONF_SEC_TRAIN = "train"
CONF_TRAIN_LOSS_COEFFICIENTS = "loss_function.coefficients"
CONF_TRAIN_LOSS_FUNCTION_NAME = "loss_function.name"
CONF_TRAIN_EPOCH_NUMBER = "train.epoch_number"
CONF_TRAIN_EARLY_STOP_BY = "train.early_stop_by"
CONF_TRAIN_SHOW_INFO_BY = "train.show_info_by"
CONF_TRAIN_SHOW_EPOCH_INFO_BY = "train.show_epoch_info_by"
CONF_TRAIN_LOSS_ALPHA =  "train.loss_function.alpha"
CONF_TRAIN_LOSS_BETA =  "train.loss_function.beta"
CONF_TRAIN_LOGITS_CONVERTER = "train.logits.converter"

                
CONF_SEC_MODEL = "model"
CONF_MODEL_PATH_TO_ROOT = "model.path_to_root"
CONF_MODEL_NUMBER_HEADS = "model.number_heads"
CONF_MODEL_EMBEDDING_SIZE = "model.embedding_size"
CONF_MODEL_OUTPUT_DIM = "model.output_dim"
CONF_MODEL_DROPOUT_RATE = "model.dropout_rate"
CONF_MODEL_SIMILARITY_SCORE_TYPE = "model.similarity_score_type"   
CONF_MODEL_SIMILARITY_SCORE_NORM_TYPE = "model.similarity_score_norm_type" 
CONF_MODEL_EMBED_ONE_HOT = "model.embed.one.hot"
CONF_MODEL_ONE_HOT_EMBEDDING_SIZE = "model.one.hot.embedding.size"

CONF_MODEL_LOCK_CONV_LAYERS = "model.lock.conv.layers"
CONF_MODEL_LOCK_CONV_LAYERS_AFTER_EPOCH = "model.lock.conv.layers.after.epoch"
CONF_MODEL_CONV_LAYERS_NBR = "model.conv.layers.nbr"
CONF_MODEL_CONV_DO_SKIP_CONNECTION = "model.conv.do.skip.connection"
CONF_MODEL_CONV_ACTIVATION_TYPE = "model.conv.activation.type"
CONF_MODEL_SCORING_TYPE = "model.conv.scoring.type"
CONF_MODEL_READ_OUT_TYPE = "model.conv.read_out.type"
CONF_MODEL_POOL_RATIO = "model.conv.pool.ratio"
CONF_MODEL_POOL_GNN_OPERATOR = "model.pool.gnn_operator"
CONF_MODEL_STORE_BEST_MODEL_ON_METRIC =  "model.store.best.model.on.metric"
CONF_MODEL_SOFT_MAX_AGGR = "model.soft_max.aggr"
CONF_FINE_TUNE_MODEL = "fine.tune.model"
CONF_CURRICULUM_LEARNING = "curriculum_learning"

CONF_DO_TRAINING = "do.training"
CONF_DO_FINE_TUNING = "do.fine.tuning"
CONF_FINE_TUNING_DEF = "fine.tuning.def"

CONF_SEC_ALIGNMENT = "alignment"
CONF_ALIGNMENT_MODEL = "alignment.model"
CONF_ALIGNMENT_DATA_SET = "alignment.data_set"
CONF_ALIGNMENT_GRAPH_MODEL_PATH = "alignment.graph.model_path"
CONF_ALIGNMENT_GRAPH_DATA_SET = "alignment.graph.data_set"
CONF_ALIGNMENT_SIMILARITY_METRIC = "alignment.similarity.metric"

CONF_SEC_MODEL_SIMGNN = "model.simgnn"
CONF_MODEL_SIMGNN_GNN_OPERATOR = "model.simgnn.gnn-operator"
CONF_MODEL_SIMGNN_FILTERS_1 = "model.simgnn.filters-1"
CONF_MODEL_SIMGNN_FILTERS_2 = "model.simgnn.filters-2"
CONF_MODEL_SIMGNN_FILTERS_3 = "model.simgnn.filters-3"
CONF_MODEL_SIMGNN_TENSOR_NEURONS = "model.simgnn.tensor-neurons"
CONF_MODEL_SIMGNN_BOTTLE_NECK_NEURONS = "model.simgnn.bottle-neck-neurons"
CONF_MODEL_SIMGNN_BOTTLE_NECK_NEURONS_2 = "model.simgnn.bottle-neck-neurons_2"
CONF_MODEL_SIMGNN_BOTTLE_NECK_NEURONS_3 = "model.simgnn.bottle-neck-neurons_3"
CONF_MODEL_SIMGNN_BINS = "model.simgnn.bins"
CONF_MODEL_SIMGNN_HISTOGRAM = "model.simgnn.histogram"
CONF_MODEL_SIMGNN_DIFFPOOL = "model.simgnn.diffpool"
CONF_MODEL_SIMGNN_DIFFPOOL_HIDDEN = "model.simgnn.diffpool.hidden"
CONF_MODEL_SIMGNN_DIFFPOOL_NUM_NODES = "model.simgnn.diffpool.num_nodes"
CONF_MODEL_SIMGNN_DIFFPOOL_NUM_LAYERS = "model.simgnn.diffpool.num_layers"
